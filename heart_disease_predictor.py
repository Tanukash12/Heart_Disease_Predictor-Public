# -*- coding: utf-8 -*-
"""Heart_disease_predictor.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dM_YdJolcQ8moDdtID2bspHBpPlveWHh
"""

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

# data collection and processing
heart_data=pd.read_csv('/content/drive/MyDrive/heart_disease_data.csv')

# understanding data

heart_data.head()

heart_data.tail()

heart_data.size

heart_data.shape

heart_data.info()

heart_data.describe()

# check null values
heart_data.isnull().sum()

"""Observation: We conclude,no Null Values."""

# checking distribution of heart variable
heart_data['target'].value_counts()

# splitting out of features and target.
x=heart_data.drop(columns='target',axis=1)
y=heart_data['target']

print(x)

print(y)

x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.4,stratify=y,random_state=2)

# model training

from sklearn.linear_model import LogisticRegression
model=LogisticRegression()

model.fit(x_train,y_train)

"""### Model Evaluation"""

# Accuracy score

x_train_prediction=model.predict(x_train)
training_data_accuracy=accuracy_score(x_train_prediction,y_train)
print('Accuracy on training data is: ',training_data_accuracy)

x_test_prediction=model.predict(x_test)
testing_data_accuracy=accuracy_score(x_test_prediction,y_test)
print('Accuracy on testing data is: ',testing_data_accuracy)

input_data=(56,0,1,140,294,0,0,153,0,1.3,1,0,2)
#convert input data to numpy array
input_array=np.asarray(input_data)
array_reshape=input_array.reshape(1,-1)
prediction=model.predict(array_reshape) #it will be a list.
if(prediction[0]==0):
  print("Don't have heart disease")
else:
  print("Person has a heart disease")

input_data=(57,1,0,110,335,0,1,143,1,3,1,1,3)
#convert input data to numpy array
input_array=np.asarray(input_data)
array_reshape=input_array.reshape(1,-1)
prediction=model.predict(array_reshape) #it will be a list.
if(prediction[0]==0):
  print("Don't have heart disease")
else:
  print("Person has a heart disease")